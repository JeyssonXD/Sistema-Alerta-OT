@model  OTProyect.ViewModels.PuntosCalor.DataChardPuntosCalor

<div class="content-wrapper">
      <div class="row page-title-header">
          @Html.Partial("_MenuPuntosCalorPartial","Grafico")
      </div>

        <!--Formulario de filtro de busqueda-->
        <div class="card">
            <div class="card-body">
                <div>
                    @using (Html.BeginForm("Grafico", "Grafico", FormMethod.Get))
                    {
                        <h6 class="heading-small text-muted mb-4">Filtro de Busqueda</h6>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div id="FiltroForm" class="pl-lg-4">
                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-username">Fecha Inicial</label>
                                        @{
                                            var DateEmpty = new DateTime { };
                                            <input name="FechaInicial" id="FechaInicial" type="date" value="@(Model.FechaInicial!=null?((DateTime)Model.FechaInicial).ToString("yyyy-MM-dd"):"")" class="form-control form-control-alternative" />
                                        }
                                        @Html.ValidationMessageFor(model => model.FechaInicial, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <label class="form-control-label" for="input-username">Fecha Final</label>
                                        @{
                                            <input name="FechaFinal" id="FechaFinal" type="date" value="@(Model.FechaFinal!=null?((DateTime)Model.FechaFinal).ToString("yyyy-MM-dd"):"")" class="form-control form-control-alternative" />
                                        }
                                        @Html.ValidationMessageFor(model => model.FechaFinal, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div>
                                <button type="submit" class="btn btn-primary" style="margin: auto;display: block; background-color:#6B9E62"><i class="mdi mdi-table-search"></i> Buscar</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <br/>
        <!---Brillo 4-->
        <input id="DataBrillo4" type="hidden" value="@foreach(var item in Model.Brillo4){@(item+",")}">
        <input id="LabelDataBrillo4" type="hidden" value="@foreach(var item in Model.LabelDataBrillo4){@(item+",")}">
        <!---Brillo 5-->
        <input id="DataBrillo5" type="hidden" value="@foreach(var item in Model.Brillo5){@(item+",")}">
        <input id="LabelDataBrillo5" type="hidden" value="@foreach(var item in Model.LabelDataBrillo5){@(item+",")}">
        <!---Confianza-->
        <input id="DataConfianza" type="hidden" value="@foreach(var item in Model.DatosEstadisticosConfidence){@(item.confidence+",")}">
        <input id="PorcentajeConfianza" type="hidden" value="@foreach(var item in Model.DatosEstadisticosConfidence){@(item.porcentaje+"-")}">
        <input id="ColorConfianza" type="hidden" value="@foreach(var item in Model.DatosEstadisticosConfidence){@(item.color+",")}">
        <div class="row">
            @*<div class="col-md-12 grid-margin">
                <div class="card">
                    <div class="p-4 border-bottom bg-light">
                        <h4 class="card-title mb-0">Mixed Chart</h4>
                    </div>
                    <div class="card-body">
                        <canvas id="mixed-chart" height="100"></canvas>
                        <div class="mr-5" id="mixed-chart-legend"></div>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="p-4 border-bottom bg-light">
                        <h4 class="card-title mb-0">Bar Chart</h4>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center pb-4">
                            <h4 class="card-title mb-0">Sales Revenue</h4>
                            <div id="bar-traffic-legend"></div>
                        </div>
                        <p class="mb-4">17% increase in sales than last week</p>
                        <canvas id="barChart" style="height:250px"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="p-4 pr-5 border-bottom bg-light d-flex justify-content-between">
                        <h4 class="card-title mb-0">Doughnut chart</h4>
                        <div id="doughnut-chart-legend" class="mr-4"></div>
                    </div>
                    <div class="card-body d-flex flex-column">
                        <canvas class="my-auto" id="doughnutChart" height="200"></canvas>
                        <div class="d-flex mt-5 py-3 border-top">
                            <p class="mb-0 font-weight-semibold"><span class="dot-indicator bg-success"></span> Product Sales </p>
                            <p class="mb-0 ml-auto text-primary">$2,464</p>
                        </div>
                        <div class="d-flex pt-3 border-top">
                            <p class="mb-0 font-weight-semibold"><span class="dot-indicator bg-success"></span>Profit Attained </p>
                            <p class="mb-0 ml-auto text-primary">$1,325</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="p-4 border-bottom bg-light">
                        <h4 class="card-title mb-0">Line Chart</h4>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center pb-4">
                            <h4 class="card-title mb-0">Sales Performance</h4>
                            <div id="line-traffic-legend"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <h2 class="mb-0 font-weight-medium">$5,341</h2>
                                <p class="mb-5 text-muted">Sales</p>
                            </div>
                            <div class="col-md-3">
                                <h2 class="mb-0 font-weight-medium">$1,334</h2>
                                <p class="mb-5 text-muted">Profits</p>
                            </div>
                        </div>
                        <canvas id="lineChart" style="height:250px"></canvas>
                    </div>
                </div>
            </div>*@


            <div class="col-lg-6 grid-margin stretch-card">
                <!---Brillo 4-->
                <div class="card">
                    <div class="p-4 border-bottom bg-light">
                        <h4 class="card-title mb-0">Brillo 4</h4>
                    </div>
                    <div class="card-body">
                        
                        <canvas id="lineChartBrillo4" style="height:250px"></canvas>
                    </div>
                </div>

            </div>

            <!---Confident--->
            <div class="col-lg-6 grid-margin stretch-card">
                <!---Brillo 5-->
                <div class="card">
                    <div class="p-4 border-bottom bg-light">
                        <h4 class="card-title mb-0">Brillo 5</h4>
                    </div>
                    <div class="card-body">

                        <canvas id="lineChartBrillo5" style="height:250px"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="p-4 pr-5 border-bottom bg-light d-flex justify-content-between">
                        <h4 class="card-title mb-0">Pie chart</h4>
                        <id id="pie-chart-legend" class="mr-4"></id>
                    </div>
                    <div class="card-body d-flex">
                        <canvas class="my-auto" id="pieChartConfianza" height="130"></canvas>
                    </div>
                </div>
            </div>

        </div>
    </div>



    <!---Scripts-->
    @section scripts{
        <!-- Custom js for this page-->
        @*<script src="~/assets/js/shared/chart.js"></script>*@

        <!--line chart -->
        <script type="text/javascript">
            ////Begin data
            var DataBrillo4 = $("#DataBrillo4").val();
            var LabelDataBrillo4 = $("#LabelDataBrillo4").val();
            var DataBrillo5 = $("#DataBrillo5").val();
            var LabelDataBrillo5 = $("#LabelDataBrillo5").val();
            var DataConfianza = $("#DataConfianza").val();
            var PorcentajeConfianza = $("#PorcentajeConfianza").val();
            var ColorConfianza = $("#ColorConfianza").val();

            //arreglo para los datos de brillo 4
            var ArrayDataBrillo4 = new Array();
            var ArrayLabelDataBrillo4 = new Array();
            //arreglo para los datos de brillo 5
            var ArrayDataBrillo5 = new Array();
            var ArrayLabelDataBrillo5 = new Array();
            //Arreglo para los datos de confianza
            var ArrayDataConfianza = new Array();
            var ArrayPorcentajeConfianza = new Array();
            var ArrayColorConfianza = new Array();

            //procesar los datos->

            //Brillo 4
            if (DataBrillo4.split(',').length > 0) {
                DataBrillo4.split(',').forEach(function (item, index) {
                    if (item != '' && item != null) {
                        ArrayDataBrillo4.push(item);
                    }
                })
            }

            if (LabelDataBrillo4.split(',').length > 0) {
                LabelDataBrillo4.split(',').forEach(function (item, index) {
                    if (item != '' && item != null) {
                        ArrayLabelDataBrillo4.push(item);
                    }
                })
            }

            //Brillo 5
            if (DataBrillo5.split(',').length > 0) {
                DataBrillo5.split(',').forEach(function (item, index) {
                    if (item != '' && item != null) {
                        ArrayDataBrillo5.push(item);
                    }
                })
            }

            if (LabelDataBrillo5.split(',').length > 0) {
                LabelDataBrillo5.split(',').forEach(function (item, index) {
                    if (item != '' && item != null) {
                        ArrayLabelDataBrillo5.push(item);
                    }
                })
            }
            //confianza
            if (DataConfianza.split(',').length > 0) {
                DataConfianza.split(',').forEach(function (item, index) {
                    if (item != '' && item != null) {
                        ArrayDataConfianza.push(item);
                    }
                })
            }

            if (PorcentajeConfianza.split('-').length > 0) {
                PorcentajeConfianza.split('-').forEach(function (item, index) {
                    if (item != '' && item != null) {
                        
                        ArrayPorcentajeConfianza.push(item);
                    }
                })
            }

            if (ColorConfianza.split(',').length > 0) {
                ColorConfianza.split(',').forEach(function (item, index) {
                    if (item != '' && item != null) {
                        ArrayColorConfianza.push(item);
                    }
                })
            }


            /////End data

            //graficar brillo 4
            if ($("#lineChartBrillo4").length) {
                var lineData = {
                    labels: ArrayLabelDataBrillo4,
                    datasets: [{
                        data: ArrayDataBrillo4,
                        backgroundColor: ChartColor[0],
                        borderColor: ChartColor[0],
                        borderWidth: 3,
                        fill: 'false',
                        label: "Brillo 4"
                    }]
                };
                var lineOptions = {
                    responsive: true,
                    maintainAspectRatio: true,
                    plugins: {
                        filler: {
                            propagate: false
                        }
                    },
                    scales: {
                        xAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Meses',
                                fontSize: 12,
                                lineHeight: 2
                            },
                            ticks: {
                                fontColor: '#212229',
                                stepSize: 50,
                                min: 0,
                                max: 150,
                                autoSkip: true,
                                autoSkipPadding: 15,
                                maxRotation: 0,
                                maxTicksLimit: 10
                            },
                            gridLines: {
                                display: false,
                                drawBorder: false,
                                color: 'transparent',
                                zeroLineColor: '#eeeeee'
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Brillo 4',
                                fontSize: 12,
                                lineHeight: 2
                            },
                            ticks: {
                                fontColor: '#212229',
                                display: true,
                                autoSkip: false,
                                maxRotation: 0,
                                stepSize: 100,
                                min: 0,
                                max: 500
                            },
                            gridLines: {
                                drawBorder: false
                            }
                        }]
                    },
                    legend: {
                        display: false
                    },
                    legendCallback: function (chart) {
                        var text = [];
                        text.push('<div class="chartjs-legend"><ul>');
                        for (var i = 0; i < chart.data.datasets.length; i++) {
                            console.log(chart.data.datasets[i]); // see what's inside the obj.
                            text.push('<li>');
                            text.push('<span style="background-color:' + chart.data.datasets[i].borderColor + '">' + '</span>');
                            text.push(chart.data.datasets[i].label);
                            text.push('</li>');
                        }
                        text.push('</ul></div>');
                        return text.join("");
                    },
                    elements: {
                        line: {
                            tension: 0
                        },
                        point: {
                            radius: 0
                        }
                    }
                }
                var lineChartCanvas = $("#lineChartBrillo4").get(0).getContext("2d");
                var lineChart = new Chart(lineChartCanvas, {
                    type: 'line',
                    data: lineData,
                    options: lineOptions
                });
                //document.getElementById('line-traffic-legend').innerHTML = lineChart.generateLegend();
            }


            //graficar brillo 5
            if ($("#lineChartBrillo5").length) {
                var lineDataBrillo5 = {
                    labels: ArrayLabelDataBrillo5,
                    datasets: [{
                        data: ArrayDataBrillo5,
                        backgroundColor: ChartColor[0],
                        borderColor: ChartColor[0],
                        borderWidth: 3,
                        fill: 'false',
                        label: "Brillo 5"
                    }]
                };
                var lineOptionsBrillo5 = {
                    responsive: true,
                    maintainAspectRatio: true,
                    plugins: {
                        filler: {
                            propagate: false
                        }
                    },
                    scales: {
                        xAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Meses',
                                fontSize: 12,
                                lineHeight: 2
                            },
                            ticks: {
                                fontColor: '#212229',
                                stepSize: 50,
                                min: 0,
                                max: 150,
                                autoSkip: true,
                                autoSkipPadding: 15,
                                maxRotation: 0,
                                maxTicksLimit: 10
                            },
                            gridLines: {
                                display: false,
                                drawBorder: false,
                                color: 'transparent',
                                zeroLineColor: '#eeeeee'
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Brillo 5',
                                fontSize: 12,
                                lineHeight: 2
                            },
                            ticks: {
                                fontColor: '#212229',
                                display: true,
                                autoSkip: false,
                                maxRotation: 0,
                                stepSize: 100,
                                min: 0,
                                max: 500
                            },
                            gridLines: {
                                drawBorder: false
                            }
                        }]
                    },
                    legend: {
                        display: false
                    },
                    legendCallback: function (chart) {
                        var text = [];
                        text.push('<div class="chartjs-legend"><ul>');
                        for (var i = 0; i < chart.data.datasets.length; i++) {
                            console.log(chart.data.datasets[i]); // see what's inside the obj.
                            text.push('<li>');
                            text.push('<span style="background-color:' + chart.data.datasets[i].borderColor + '">' + '</span>');
                            text.push(chart.data.datasets[i].label);
                            text.push('</li>');
                        }
                        text.push('</ul></div>');
                        return text.join("");
                    },
                    elements: {
                        line: {
                            tension: 0
                        },
                        point: {
                            radius: 0
                        }
                    }
                }
                var lineChartCanvasBrillo5 = $("#lineChartBrillo5").get(0).getContext("2d");
                var lineChart = new Chart(lineChartCanvasBrillo5, {
                    type: 'line',
                    data: lineDataBrillo5,
                    options: lineOptionsBrillo5
                });
                //document.getElementById('line-traffic-legend').innerHTML = lineChart.generateLegend();
            }

            ///confianza
            if ($("#pieChartConfianza").length) {
                var pieChartCanvas = $("#pieChartConfianza").get(0).getContext("2d");
                var pieChart = new Chart(pieChartCanvas, {
                    type: 'pie',
                    data: {
                        datasets: [{
                            data: ArrayDataConfianza,
                            backgroundColor: ColorConfianza,
                            borderColor: ColorConfianza,
                        }],
                        labels: ArrayDataConfianza
                    },
                    options: {
                        responsive: true,
                        animation: {
                            animateScale: true,
                            animateRotate: true
                        },
                        legend: {
                            display: false
                        },
                        legendCallback: function (chart) {
                            var text = [];
                            text.push('<div class="chartjs-legend"><ul>');
                            for (var i = 0; i < chart.data.datasets[0].data.length; i++) {
                                text.push('<li><span style="background-color:' + chart.data.datasets[0].backgroundColor[i] + '">');
                                text.push('</span>');
                                if (chart.data.labels[i]) {
                                    text.push(chart.data.labels[i]);
                                }
                                text.push('</li>');
                            }
                            text.push('</div></ul>');
                            return text.join("");
                        }
                    }
                });
                document.getElementById('pie-chart-legend').innerHTML = pieChart.generateLegend();
            }
            
        </script>
    }
